// <auto-generated />
using System;
using CoreTest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreTest.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20201019175745_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoreTest.Entity.SysUser", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("addrPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("auth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("enableGoogleAuth")
                        .HasColumnType("bit");

                    b.Property<string>("funAuthList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("googleSecretKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iPplace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loginName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("loginPlace")
                        .HasColumnType("bit");

                    b.Property<string>("menuAuthList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stauts")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("CoreTest.Entity.User", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CradPwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Eliminated")
                        .HasColumnType("bit");

                    b.Property<string>("GamePwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsTuishui")
                        .HasColumnType("bit");

                    b.Property<string>("OpenBankSub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VipLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("bankCrad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("depositCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("depositSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("firstDepositNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("firstDepositTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("firstWithdrawNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("firstWithdrawTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("game_account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iPplace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isdelete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isreportignore")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("lastLoginData")
                        .HasColumnType("datetime2");

                    b.Property<string>("lastLoginIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("lastLogoutData")
                        .HasColumnType("datetime2");

                    b.Property<int?>("loginCount")
                        .HasColumnType("int");

                    b.Property<string>("loginname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailaddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("maxDepositNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("maxDepositTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("maxWithdrawNum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("maxWithdrawTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("openBandAddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("openBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("playset")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pwd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pwdAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pwdQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("qq")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("registData")
                        .HasColumnType("datetime2");

                    b.Property<string>("registIP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("registaddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userLeve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("weixin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("withdrawCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("withdrawSum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
